import htmlMinifierLib from "html-minifier-terser";
import globLib from "glob";

import fs from "fs-extra";
import path from "path";

const { minify } = htmlMinifierLib;
const { glob } = globLib;

const PRODUCTION_DIRECTORY = "dist";

glob("src/**/*.html", (error, files) => {
	if (error) console.error(error);

	files.forEach(async (file) => {
		// glob works with forward slashes in paths
		const newFile = file.replace(/^[\w]+(?=\/)/, `${PRODUCTION_DIRECTORY}`);

		await fs.ensureDir(path.dirname(newFile));

		const minifiedHtml = await minify(
			await fs.readFile(file, { encoding: "utf8" }),
			{
				caseSensitive: true,
				collapseBooleanAttributes: true,
				collapseInlineTagWhitespace: true,
				collapseWhitespace: true,
				decodeEntities: true,
				html5: true,
				includeAutoGeneratedTags: true,
				keepClosingSlash: true,
				noNewlinesBeforeTagClose: true,
				removeAttributeQuotes: true,
				removeComments: true,
				removeRedundantAttributes: true,
				removeTagWhitespace: true,
				useShortDoctype: true,
			}
		);
		fs.writeFileSync(newFile, minifiedHtml);
	});
});
